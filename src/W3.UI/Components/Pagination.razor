@if (Result.PageCount > 1)
{
    <div class="pagination">
        @if(Result.CurrentPage != 1) 
        {
            <a @onclick="@(() => PagerButtonClicked(1))">&laquo;</a>
        }
        @for (var i = StartIndex; i <= FinishIndex; i++)
        {
            var currentIndex = i;
            @if (i == Result.CurrentPage)
            {
                <a class="active">@i</a>
            }
            else
            {
                <a @onclick="@(() => PagerButtonClicked(currentIndex))" class="btn">@i</a>
            }
        }
        @if(Result.CurrentPage != Result.PageCount) 
        {
            <a @onclick="@(() => PagerButtonClicked(Result.PageCount))">&raquo;</a>
        }
    </div>
}

@code {
    [Parameter]
    public PagedResultBase Result { get; set; }

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    public int StartIndex { get; private set; } = 0;
    public int FinishIndex { get; private set; } = 0;

    protected override void OnParametersSet()
    {
        StartIndex = Math.Max(Result.CurrentPage - 5, 1);
        FinishIndex = Math.Min(Result.CurrentPage + 5, Result.PageCount);

        base.OnParametersSet();
    }

    protected void PagerButtonClicked(int page)
    {
        PageChanged.InvokeAsync(page);
    }
}